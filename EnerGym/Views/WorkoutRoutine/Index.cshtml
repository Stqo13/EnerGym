@using EnerGym.ViewModels.WorkoutRoutineViewModels
@using static EnerGym.Common.ApplicationConstraints.ApplicationUserConstraints;
@model WorkoutRoutinesIndexViewModel

@{
    ViewData["Title"] = "Workout Routines";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary">@ViewData["Title"]</h2>
        @if (User?.Identity?.IsAuthenticated == true)
        {
            <a asp-controller="WorkoutRoutine" asp-action="Add" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add Routine
            </a>
        }
    </div>
    <hr />

    <div class="row g-4">
        @foreach (var routine in Model.WorkoutRoutines)
        {
            <div class="col-md-4 col-sm-6 d-flex">
                <div class="card shadow-sm h-100 w-100">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-center text-primary">@routine.ExerciseName</h5>
                        <p class="text-muted flex-fill text-center">@routine.ExerciseDescription</p>

                        <div class="mt-auto">
                            <div class="d-flex justify-content-center gap-2">
                                <a asp-controller="WorkoutRoutine" asp-action="Details" asp-route-id="@routine.Id" class="btn btn-info btn-sm">
                                    Details
                                </a>
                                @if (User?.Identity?.IsAuthenticated == true)
                                {
                                    <a asp-controller="WorkoutRoutine" asp-action="Edit" asp-route-id="@routine.Id" class="btn btn-secondary btn-sm">
                                        Edit
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="d-flex justify-content-center mt-4">
        <nav>
            <ul class="pagination">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)">Previous</a>
                    </li>
                }

                @if (Model.CurrentPage > 2)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="1">1</a>
                    </li>
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }

                @for (int i = Model.CurrentPage - 1; i <= Model.CurrentPage + 1; i++)
                {
                    if (i > 0 && i <= Model.TotalPages)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                        </li>
                    }
                }

                @if (Model.CurrentPage < Model.TotalPages - 1)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.TotalPages">@Model.TotalPages</a>
                    </li>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
